language: go
arch: amd64
virt: vm
os: linux
dist: focal
go:
  - 1.20.3

cache:
  directories:
    - $HOME/.cache/go-build # Cache the binaries
    - $HOME/gopath/pkg/mod # Cache the Go modules

services:
  - docker

stages:
  - lint
  - test

before_install:
  # Start VCService database
  - scripts/get-and-start-$VCSERVICE_DB.sh

jobs:
  include:
    - stage: lint
      go:
        - 1.20.3
      before_install:
        # Install dependencies
        - scripts/install-protobuf.sh
        - go install golang.org/x/tools/cmd/goimports@latest
        - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.53.3
        # Fetch main to only detect issues from changes to main
        - git fetch origin main:main
        # Apply formatting
        - find . -name \*.go -not -name \*.pb.go -exec goimports -d -e {} \; | tee /dev/stderr | [ $(wc -c) -eq 0 ]
        - find . -name \*.go -not -name \*.pb.go -exec gofmt -d -e  {} \; | tee /dev/stderr | [ $(wc -c) -eq 0 ]
        - PATH="$HOME/bin:$PATH" make protos-blocktx
      script:
        # Check if original code changed due to formatting
        - git diff | tee /dev/stderr | [ $(wc -c) -eq 0 ]
        # Run lint and test
        - make lint
    - stage: test
      name: Unit Tests (postgres)
      env: DB_INSTANCE=local VCSERVICE_DB=postgres
      script: make test
    - stage: test
      name: Unit Tests (yugabyte)
      env: DB_INSTANCE=local VCSERVICE_DB=yuga
      script: make test
    - stage: test
      name: Integration Tests (yugabyte)
      env: DB_INSTANCE=local VCSERVICE_DB=yuga
      script: make integration-test
