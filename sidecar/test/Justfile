FABRIC_VERSION := "3.0.0-preview"

fabric_dir:= justfile_directory() / "fabric"
fabric_bins := fabric_dir / "bin"

out := justfile_directory() / "out"
cryptogen_out := out / "orgs"
configtxgen_out := out / "mychannelblock"

orderer_credentials := "orgs/ordererOrganizations/orderer.org/orderers/raft<<id>>.orderer.org"
orderer_msp := orderer_credentials / "msp"
orderer_tls := orderer_credentials / "tls"
orderer_port := "705<<x>>"

client_org := "Org1"
client_credentials := "orgs/peerOrganizations/org1.com/users/User1@org1.com"

channelID := "mychannel"
consensus_type := "etcdraft"
deployment_type := "local"

config_path := join(justfile_directory(), "testdata")

init: clean cryptogen genesis

cryptogen:
    {{fabric_bins}}/cryptogen \
    generate \
    --config="{{config_path}}/crypto-config.yaml" \
    --output="{{cryptogen_out}}"

genesis channel_id=("mychannel") profil=("SampleDevModeEtcdRaft"):
    {{fabric_bins}}/configtxgen \
    -configPath "{{config_path}}" \
    -outputBlock "{{configtxgen_out}}" \
    -profile {{profil}} \
    -channelID {{channel_id}}

clean:
    rm -rf "{{out}}"

start: init
    tmux new-session -d -s "orderer" \; \
    split-window -t "orderer:0" -v \; \
    split-window -t "orderer:0.0" -h \; \
    split-window -t "orderer:0.1" -h \; \
    send-keys -t "orderer:0.0" "just run_orderer 0" Enter \; \
    send-keys -t "orderer:0.1" "sleep 2; just join; just run_coordinator" Enter \; \
    send-keys -t "orderer:0.2" "sleep 3; just run-sidecar" Enter \; \
    send-keys -t "orderer:0.3" "just submit" \; \
    attach-session -t "orderer:0.3"

kill:
    tmux kill-session -t "orderer"

run_orderer n=("0"):
    FABRIC_CFG_PATH="{{config_path}}" \
    FABRIC_LOGGING_SPEC="INFO" \
    ORDERER_GENERAL_LOCALMSPID="orderer" \
    ORDERER_GENERAL_LOCALMSPDIR="{{out}}/{{replace(orderer_msp, "<<id>>", n)}}" \
    ORDERER_GENERAL_LISTENPORT="{{replace(orderer_port, "<<x>>", n)}}" \
    ORDERER_GENERAL_BOOTSTRAPMETHOD=none \
    ORDERER_CHANNELPARTICIPATION_ENABLED=true \
    ORDERER_GENERAL_TLS_ENABLED="true" \
    ORDERER_GENERAL_TLS_PRIVATEKEY="{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/server.key" \
    ORDERER_GENERAL_TLS_CERTIFICATE="{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/server.crt" \
    ORDERER_GENERAL_TLS_ROOTCAS="[{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/ca.crt]" \
    ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE="{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/server.crt" \
    ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY="{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/server.key" \
    ORDERER_GENERAL_CLUSTER_ROOTCAS="[{{out}}/{{replace(orderer_tls, "<<id>>", n)}}/ca.crt]" \
    ORDERER_OPERATIONS_LISTENADDRESS="{{replace("localhost:844<<x>>", "<<x>>", n)}}" \
    ORDERER_ADMIN_LISTENADDRESS="{{replace("localhost:944<<x>>", "<<x>>", n)}}" \
    ORDERER_FILELEDGER_LOCATION="{{out}}/hyperledger/production/orderer_{{n}}" \
    ORDERER_CONSENSUS_WALDIR="{{out}}/hyperledger/production/orderer_{{n}}/etcdraft/wal" \
    ORDERER_CONSENSUS_SNAPDIR="{{out}}/hyperledger/production/orderer_{{n}}/etcdraft/snapshot" \
    {{fabric_bins}}/orderer

run_coordinator:
    go run mock_coordinator/main.go --configs=mock_coordinator/config.yaml

join-i n=("0"):
    {{fabric_bins}}/osnadmin channel join --channelID {{channelID}} --config-block {{configtxgen_out}} -o {{replace("localhost:944<<x>>", "<<x>>", n)}}

join:
    just join-i 0

submit:
    go run ./submitter --configs=testdata/sidecar-config.yaml

fabric-bins:
    mkdir -p {{fabric_dir}} && cd {{fabric_dir}} && \
    curl -sSL https://bit.ly/2ysbOFE | bash -s -- {{FABRIC_VERSION}} 1.5.7 -s

run-sidecar:
    go run ../cmd/server/main.go --configs=testdata/sidecar-config.yaml