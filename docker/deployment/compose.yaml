version: "3.8"

services:
  mock-ordering-service:
    image: "icr.io/cbdc/mock-ordering-service:0.0.2"
    ports:
      - "4001:4001"
    volumes:
      - ./config/config-mockorderingservice.yaml:/config.yaml
      - ./scripts/run-app.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh

  signature-verifier:
    image: "icr.io/cbdc/committer-signature-verifier:0.0.2"
    ports:
      - "5001:5001"
    volumes:
      - ./config/config-sigservice.yaml:/config.yaml
      - ./scripts/run-app.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh

  validator-persister:
    image: "icr.io/cbdc/committer-validator-persister:0.0.2"
    ports:
      - "6001:6001"
    volumes:
      - ./config/config-vcservice.yaml:/config.yaml
      - ./scripts/validatorpersister.docker-entrypoint.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh

  query-executor:
    image: "icr.io/cbdc/committer-query-executor:0.0.2"
    ports:
      - "7001:7001"
    volumes:
      - ./config/config-queryservice.yaml:/config.yaml
      - ./scripts/run-app.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh

  db:
    image: "postgres:16.1"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: yugabyte
      POSTGRES_PASSWORD: yugabyte

  coordinator:
    image: "icr.io/cbdc/committer-coordinator:0.0.2"
    ports:
      - "9001:9001"
    volumes:
      - ./config/config-coordinator.yaml:/config.yaml
      - ./scripts/run-app.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh

  sidecar:
    image: "icr.io/cbdc/committer-sidecar:0.0.2"
    ports:
      - "5050:5050"
    volumes:
      - ./config/config-sidecar.yaml:/config.yaml
      - ./scripts/run-app.sh:/docker-entrypoint.sh
    entrypoint: ./docker-entrypoint.sh
