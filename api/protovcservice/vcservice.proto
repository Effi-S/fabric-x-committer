syntax = "proto3";

option go_package = "github.ibm.com/decentralized-trust-research/scalable-committer/api/protovcservice";

package protovcservice;

import "api/protoblocktx/block_tx.proto";

service ValidationAndCommitService {
  rpc StartValidateAndCommitStream (stream TransactionBatch) returns (stream TransactionStatus);
  rpc NumberOfWaitingTransactionsForStatus(Empty) returns (WaitingTransactions);
}

message TransactionBatch {
  repeated Transaction transactions = 1;
}

message Transaction {
  string ID = 1;
  repeated protoblocktx.TxNamespace namespaces = 2;
  optional InvalidTxStatus prelim_invalid_tx_status = 3;
}

message InvalidTxStatus {
    protoblocktx.Status code = 1;
}

message TransactionStatus {
    map<string, protoblocktx.Status> status = 1;
}

message WaitingTransactions {
    int32 count = 1;
}

message Empty {}
