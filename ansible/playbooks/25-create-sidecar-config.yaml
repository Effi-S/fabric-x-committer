#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Create configs for sidecar
  hosts: localhost
  vars:
    selected_hosts: "{{groups['sidecars'] | d([]) | intersect(groups[target_hosts] | d([])) | map('extract', hostvars)}}"
  roles:
    - kwoodson.yedit
  tasks:
    - name: Create base config
      vars:
        config_root: sidecar
      include_tasks: ../subtasks/create-base-config.yaml
      when: selected_hosts | length > 0
    - name: Further edit sidecar config
      vars:
        sidecar_instance: "{{selected_hosts | first}}"
        filepath: "{{dst_dir}}/{{sidecar_instance.inventory_hostname}}/{{sidecar_instance.config}}"
        committer: "{{groups['coordinators'] | default([]) | map('extract', hostvars) | first}}"
        committer_endpoint: "{{committer.ansible_host}}:{{committer.service_port}}"
        orderer: "{{groups['orderingservices'] | default([]) | map('extract', hostvars) | first}}"
        orderer_endpoint: "{{orderer.ansible_host}}:{{orderer.service_port}}"
        inherit_peer: "{{hostvars[sidecar_instance.inherit_peer]}}"
      yedit:
        src: "{{filepath}}"
        edits:
          - key: sidecar.committer.endpoint
            value: "{{committer_endpoint}}"
          - key: sidecar.committer.ledger-path
            value: "{{sidecar_instance.config_dir}}/ledger"
          - key: sidecar.orderer.endpoint
            value: "{{orderer_endpoint}}"
          - key: sidecar.orderer.channel-id
            value: "{{channel_id}}"
          - key: sidecar.orderer.orderer-connection-profile
            value: "{{sidecar_instance.config_dir}}/fabric.{{topology_name}}/peers/{{inherit_peer.organization}}.{{inherit_peer.inventory_hostname}}/profile.yaml"
      when: selected_hosts | length > 0
