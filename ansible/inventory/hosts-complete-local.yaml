all:
  vars:
    ansible_connection: local

    # The user of the deployment machine
    ansible_user: "{{lookup('env', 'USER')}}"

    # Where to transfer the binary and config files on the deployment machines
    root_path: "{{lookup('env', 'GOPATH')}}/src/github.com/decentralized-trust-research/scalable-committer"
    top_binary_dir: "{{root_path}}/eval/experiments/local-bin/"
    top_config_dir: "{{root_path}}/eval/experiments/local-configs"
    ansible_host: 127.0.0.1
    os: osx

  children:
    services:
      children:

        coordinators:
          vars:
            config: config-coordinator.yaml
          hosts:
            coordinator-machine:
              inherit_endorser: endorser-1 # Used for setting the sig verification key
              config_dir: "{{top_config_dir}}/coordinator"
              binary_dir: "{{top_binary_dir}}/coordinator"
              service_port: 5002
              prometheus_exporter_port: 2112

        sigservices:
          vars:
            config: config-sigservice.yaml
          hosts:
            sigservice-machine1:
              config_dir: "{{top_config_dir}}/sigservice1"
              binary_dir: "{{top_binary_dir}}/sigservice1"
              service_port: 5000
              prometheus_exporter_port: 2110

        shardsservices:
          vars:
            config: config-shardsservice.yaml
          hosts:
            shardsservice-machine:
              config_dir: "{{top_config_dir}}/shardsservice"
              binary_dir: "{{top_binary_dir}}/shardsservice"
              db_dir: "{{config_dir}}/db"
              service_port: 5001
              prometheus_exporter_port: 2115

        orderingservices:
          vars:
            config: orderer.yaml
            organization: DefaultOrdererOrg
            domain: example.com
          hosts:
            orderingservice-machine1:
              config_dir: "{{top_config_dir}}/orderer0"
              binary_dir: "{{top_binary_dir}}/orderer0"
              service_port: 7050
              cluster_port: 7070
              ops_port: 8440
            orderingservice-machine2:
              config_dir: "{{top_config_dir}}/orderer1"
              binary_dir: "{{top_binary_dir}}/orderer1"
              service_port: 7051
              cluster_port: 7071
              ops_port: 8441
            orderingservice-machine3:
              config_dir: "{{top_config_dir}}/orderer2"
              binary_dir: "{{top_binary_dir}}/orderer2"
              service_port: 7052
              cluster_port: 7072
              ops_port: 8442
            orderingservice-machine4:
              config_dir: "{{top_config_dir}}/orderer3"
              binary_dir: "{{top_binary_dir}}/orderer3"
              service_port: 7053
              cluster_port: 7073
              ops_port: 8443

        peerservices:
          vars:
            config: core.yaml
            profile: profile.yaml
            organization: DefaultPeerOrg
            domain: example.com
          hosts:
            peerservice-machine1:
              config_dir: "{{top_config_dir}}/peer0"
              binary_dir: "{{top_binary_dir}}/peer0"
              service_port: 7001

        fscservices:
          vars:
            config: core.yaml
            demo_views: github.ibm.com/decentralized-trust-research/fts-sc/demo/views
            organization: DefaultPeerOrg
            domain: example.com
            binary_dir: "{{top_binary_dir}}/fscnodes"
          hosts:
            lib-p2p-bootstrap-node:
              config_dir: "{{top_config_dir}}/lib_p2p"
              service_port: 8007
              p2p_port: 8027
              bootstrap: true
            auditor:
              config_dir: "{{top_config_dir}}/auditor"
              ops_port: 8088
              web_port: 9088
              service_port: 8008
              p2p_port: 8028
              auditor: true
              certifier: true
              view_factories:
                - id: initRegisterAuditor
                  factory: "{{demo_views}}/RegisterAuditorViewFactory"
                - id: initRegisterCertifier
                  factory: "{{demo_views}}/RegisterCertifierViewFactory"
                - id: historyAuditing
                  factory: "{{demo_views}}/ListAuditedTransactionsViewFactory"
            issuer:
              config_dir: "{{top_config_dir}}/issuer"
              ops_port: 8080
              web_port: 9080
              service_port: 8000
              p2p_port: 8020
              issuer_identities:
                - default
                - id1 #TODO: AF Remove redundant ID's
              owner_identities:
                - default
                - owner
              view_factories:
                - id: issue
                  factory: "{{demo_views}}/IssueCashViewFactory"

            alice:
              config_dir: "{{top_config_dir}}/alice"
              ops_port: 8081
              web_port: 9081
              service_port: 8001
              p2p_port: 8021
              owner_identities:
                - id1
              responders:
                - responder: "{{demo_views}}/AcceptIssuedCashView"
                  initiator: "{{demo_views}}/IssueCashView"
                - responder: "{{demo_views}}/AcceptTransferCashView"
                  initiator: "{{demo_views}}/TransferView"
              view_factories:
                - id: transfer
                  factory: "{{demo_views}}/TransferViewFactory"
                - id: balance
                  factory: "{{demo_views}}/BalanceViewFactory"
                - id: registerQRCode
                  factory: "{{demo_views}}/QRCodeRegisterViewFactory"
                - id: acceptedTransactionsHistory
                  factory: "{{demo_views}}/ListAcceptedTransactionsViewFactory"
                - id: enrollmentID
                  factory: "{{demo_views}}/GetEnrollmentIDViewFactory"
                - id: txStatusByNonce
                  factory: "{{demo_views}}/TxStatusByNonceViewFactory"

            bob:
              config_dir: "{{top_config_dir}}/bob"
              ops_port: 8082
              web_port: 9082
              service_port: 8002
              p2p_port: 8022
              owner_identities:
                - id1
              responders:
                - responder: "{{demo_views}}/AcceptIssuedCashView"
                  initiator: "{{demo_views}}/IssueCashView"
                - responder: "{{demo_views}}/AcceptTransferCashView"
                  initiator: "{{demo_views}}/TransferView"
              view_factories:
                - id: transfer
                  factory: "{{demo_views}}/TransferViewFactory"
                - id: balance
                  factory: "{{demo_views}}/BalanceViewFactory"
                - id: registerQRCode
                  factory: "{{demo_views}}/QRCodeRegisterViewFactory"
                - id: acceptedTransactionsHistory
                  factory: "{{demo_views}}/ListAcceptedTransactionsViewFactory"
                - id: enrollmentID
                  factory: "{{demo_views}}/GetEnrollmentIDViewFactory"
                - id: txStatusByNonce
                  factory: "{{demo_views}}/TxStatusByNonceViewFactory"
            endorser-1: # Only one endorser supported currently
              config_dir: "{{top_config_dir}}/endorser1"
              endorser: true
              service_port: 8003
              p2p_port: 8023

        sidecars:
          vars:
            inherit_peer: peerservice-machine1
            config: config-sidecar.yaml
            organization: DefaultPeerOrg
            domain: example.com
          hosts:
            sidecar-machine:
              config_dir: "{{top_config_dir}}/sidecar"
              binary_dir: "{{top_binary_dir}}/sidecar"
              service_port: 1234
              prometheus_exporter_port: 2111

    clients:
      children:
        sidecarclients:
          vars:
            config: config-sidecar-client.yaml
            inherit_peer: peerservice-machine1 # Used for connecting to the orderer
            inherit_endorser: endorser-1 # Used for signing the TXs for the sig verifier
          hosts:
            sidecar-client-machine1:
              profile: profile-sidecar-client.yaml
              prometheus_exporter_port: 2116
              config_dir: "{{top_config_dir}}/sidecarclient0/"
              binary_dir: "{{top_binary_dir}}/sidecarclient0"
            sidecar-client-machine2:
              prometheus_exporter_port: 2117
              config_dir: "{{top_config_dir}}/sidecarclient1/"
              binary_dir: "{{top_binary_dir}}/sidecarclient1"

    monitoring:
      hosts:
        monitoring-machine:
          jaeger_exporter_port: 14268
          jaeger_optl_exporter_port: 4318